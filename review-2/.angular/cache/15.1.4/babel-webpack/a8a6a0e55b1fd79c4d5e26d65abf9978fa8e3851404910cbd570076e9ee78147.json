{"ast":null,"code":"import { Observable } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherServiceService {\n  constructor(http) {\n    this.http = http;\n    this.store = {};\n  }\n  getWeather({\n    city,\n    country,\n    units\n  } = {\n    city: \"London\",\n    country: \"UK\",\n    units: \"metric\"\n  }) {\n    const hash = `${city}${country}${units}`;\n    if (hash in this.store) {\n      return new Observable(this.store[hash]);\n    }\n    return this.http.get(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=48f2d5e18b0d2bc50519b58cce6409f1${units === \"metric\" ? \"&units=metric\" : \"\"}`);\n  }\n  addToStore(hash, data) {\n    this.store[hash] = data;\n  }\n}\nWeatherServiceService.ɵfac = function WeatherServiceService_Factory(t) {\n  return new (t || WeatherServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nWeatherServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WeatherServiceService,\n  factory: WeatherServiceService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,qBAAqB;EAChCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACxB,UAAK,GAA4B,EAAE;EADI;EAGvCC,UAAU,CACR;IACEC,IAAI;IACJC,OAAO;IACPC;EAAK,IACkD;IACvDF,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;GACR;IAED,MAAMC,IAAI,GAAG,GAAGH,IAAI,GAAGC,OAAO,GAAGC,KAAK,EAAE;IACxC,IAAIC,IAAI,IAAI,IAAI,CAACC,KAAK,EAAE;MACtB,OAAO,IAAIT,UAAU,CAAC,IAAI,CAACS,KAAK,CAACD,IAAI,CAAC,CAAC;;IAGzC,OAAO,IAAI,CAACL,IAAI,CAACO,GAAG,CAClB,oDAAoDL,IAAI,IAAIC,OAAO,0CACjEC,KAAK,KAAK,QAAQ,GAAG,eAAe,GAAG,EACzC,EAAE,CACH;EACH;EAEAI,UAAU,CAACH,IAAY,EAAEI,IAAS;IAChC,IAAI,CAACH,KAAK,CAACD,IAAI,CAAC,GAAGI,IAAI;EACzB;;AA7BWX,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAY,SAArBZ,qBAAqB;EAAAa,YAFpB;AAAM","names":["Observable","WeatherServiceService","constructor","http","getWeather","city","country","units","hash","store","get","addToStore","data","factory","providedIn"],"sourceRoot":"","sources":["/Users/kevincunningham/code/fwt/advAngularMar23/review-2/src/app/weather-service.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WeatherServiceService {\n  constructor(private http: HttpClient) {}\n  store: { [hash: string]: any } = {};\n\n  getWeather(\n    {\n      city,\n      country,\n      units,\n    }: { city?: string; country?: string; units?: string } = {\n      city: \"London\",\n      country: \"UK\",\n      units: \"metric\",\n    }\n  ) {\n    const hash = `${city}${country}${units}`;\n    if (hash in this.store) {\n      return new Observable(this.store[hash]);\n    }\n\n    return this.http.get(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=48f2d5e18b0d2bc50519b58cce6409f1${\n        units === \"metric\" ? \"&units=metric\" : \"\"\n      }`\n    );\n  }\n\n  addToStore(hash: string, data: any) {\n    this.store[hash] = data;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}