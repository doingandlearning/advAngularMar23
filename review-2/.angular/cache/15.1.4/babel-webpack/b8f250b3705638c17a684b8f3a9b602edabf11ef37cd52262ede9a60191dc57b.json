{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather-service.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../data/data.component\";\nimport * as i4 from \"@angular/common\";\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.weatherData = null;\n    this.city = \"London\";\n    this.country = \"UK\";\n    this.units = \"metric\";\n  }\n  ngOnInit() {\n    this.weatherService.getWeather().subscribe({\n      next: data => this.weatherData = data\n    });\n  }\n  handleEventClick({\n    data: {\n      City,\n      Country\n    }\n  }) {\n    console.log(City, Country, this.units);\n    this.city = City;\n    this.country = Country;\n    this.weatherService.getWeather({\n      city: City,\n      country: Country,\n      units: this.units\n    }).subscribe({\n      next: data => this.weatherData = data\n    });\n  }\n}\nWeatherComponent.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.WeatherServiceService));\n};\nWeatherComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeatherComponent,\n  selectors: [[\"app-weather\"]],\n  decls: 11,\n  vars: 6,\n  consts: [[3, \"ngModel\", \"ngModelChange\"], [\"value\", \"metric\"], [\"value\", \"kelvin\"], [\"buttonLabel\", \"Get Weather\", 3, \"myEvent\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"select\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_select_ngModelChange_0_listener($event) {\n        return ctx.units = $event;\n      });\n      i0.ɵɵelementStart(1, \"option\", 1);\n      i0.ɵɵtext(2, \"Celcius\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"option\", 2);\n      i0.ɵɵtext(4, \"Kelvin\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"app-data\", 3);\n      i0.ɵɵlistener(\"myEvent\", function WeatherComponent_Template_app_data_myEvent_5_listener($event) {\n        return ctx.handleEventClick($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"h2\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"pre\");\n      i0.ɵɵtext(9);\n      i0.ɵɵpipe(10, \"json\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngModel\", ctx.units);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate2(\"Here is the weather for \", ctx.city, \", \", ctx.country, \":\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 4, ctx.weatherData));\n    }\n  },\n  dependencies: [i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.DataComponent, i4.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;AAQA,OAAM,MAAOA,gBAAgB;EAM3BC,YAAoBC,cAAqC;IAArC,mBAAc,GAAdA,cAAc;IALlC,gBAAW,GAAe,IAAI;IAC9B,SAAI,GAAG,QAAQ;IACf,YAAO,GAAG,IAAI;IACd,UAAK,GAAwB,QAAQ;EAEuB;EAE5DC,QAAQ;IACN,IAAI,CAACD,cAAc,CAChBE,UAAU,EAAE,CACZC,SAAS,CAAC;MAAEC,IAAI,EAAGC,IAAI,IAAM,IAAI,CAACC,WAAW,GAAGD;IAAK,CAAE,CAAC;EAC7D;EAEAE,gBAAgB,CAAC;IACfF,IAAI,EAAE;MAAEG,IAAI;MAAEC;IAAO;EAAE,CAGxB;IACCC,OAAO,CAACC,GAAG,CAACH,IAAI,EAAEC,OAAO,EAAE,IAAI,CAACG,KAAK,CAAC;IACtC,IAAI,CAACC,IAAI,GAAGL,IAAI;IAChB,IAAI,CAACM,OAAO,GAAGL,OAAO;IACtB,IAAI,CAACT,cAAc,CAChBE,UAAU,CAAC;MAAEW,IAAI,EAAEL,IAAI;MAAEM,OAAO,EAAEL,OAAO;MAAEG,KAAK,EAAE,IAAI,CAACA;IAAK,CAAE,CAAC,CAC/DT,SAAS,CAAC;MAAEC,IAAI,EAAGC,IAAI,IAAM,IAAI,CAACC,WAAW,GAAGD;IAAK,CAAE,CAAC;EAC7D;;AAzBWP,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP7BC,iCAA4B;MAApBA;QAAA;MAAA,EAAmB;MAC1BA,iCAAuB;MAAAA,uBAAO;MAAAA,iBAAS;MACvCA,iCAAuB;MAAAA,sBAAM;MAAAA,iBAAS;MAEvCA,mCAAyE;MAArCA;QAAA,OAAWC,4BAAwB;MAAA,EAAC;MAACD,iBAAW;MAGpFA,0BAAI;MAAAA,YAA8C;MAAAA,iBAAK;MACvDA,2BAAK;MAAAA,YAAsB;;MAAAA,iBAAM;;;MARzBA,mCAAmB;MAOvBA,eAA8C;MAA9CA,mFAA8C;MAC7CA,eAAsB;MAAtBA,4DAAsB","names":["WeatherComponent","constructor","weatherService","ngOnInit","getWeather","subscribe","next","data","weatherData","handleEventClick","City","Country","console","log","units","city","country","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/kevincunningham/code/fwt/advAngularMar23/review-2/src/app/weather/weather.component.ts","/Users/kevincunningham/code/fwt/advAngularMar23/review-2/src/app/weather/weather.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { WeatherServiceService } from \"../weather-service.service\";\n\n@Component({\n  selector: \"app-weather\",\n  templateUrl: \"./weather.component.html\",\n  styleUrls: [\"./weather.component.css\"],\n})\nexport class WeatherComponent {\n  weatherData: any | null = null;\n  city = \"London\";\n  country = \"UK\";\n  units: \"metric\" | \"kelvin\" = \"metric\";\n\n  constructor(private weatherService: WeatherServiceService) {}\n\n  ngOnInit() {\n    this.weatherService\n      .getWeather()\n      .subscribe({ next: (data) => (this.weatherData = data) });\n  }\n\n  handleEventClick({\n    data: { City, Country },\n  }: {\n    data: { City: string; Country: string };\n  }) {\n    console.log(City, Country, this.units);\n    this.city = City;\n    this.country = Country;\n    this.weatherService\n      .getWeather({ city: City, country: Country, units: this.units })\n      .subscribe({ next: (data) => (this.weatherData = data) });\n  }\n}\n","\n<select [(ngModel)]=\"units\">\n\t<option value=\"metric\">Celcius</option>\n\t<option value=\"kelvin\">Kelvin</option>\n</select>\n<app-data buttonLabel=\"Get Weather\" (myEvent)=\"handleEventClick($event)\"></app-data>\n\n\n<h2>Here is the weather for {{city}}, {{country}}:</h2>\n<pre>{{weatherData | json}}</pre>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}